apiVersion: v1
kind: Service
metadata:
  name: dotnet-demoapp
spec:
  ports:
    - port: 5000
      protocol: TCP
  selector:
    app: dotnet-demoapp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dotnet-demoapp
spec:
  selector:
    matchLabels:
      app: dotnet-demoapp
  replicas: 1
  template:
    metadata:
      labels:
        app: dotnet-demoapp
    spec:
      containers:
      - name: dotnet-demoapp
        image: bpschmitt/dotnet-demoapp:1.4.0
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: "256M"
            cpu: "250m"
        ports:
        - containerPort: 5000
        volumeMounts:
        - name: agentdir
          mountPath: "/agent-dir"
        command: ["sh","-c","source $(CORECLR_NEWRELIC_HOME)/setenv.sh && dotnet dotnet-demoapp.dll"]
        env:
        - name: CORECLR_NEWRELIC_HOME
          value: /agent-dir/newrelic-netcore20-agent
        - name: NEW_RELIC_LICENSE_KEY
          valueFrom:
            secretKeyRef:
              name: nrlicensekey
              key: nrlicensekey
        - name: NEW_RELIC_APP_NAME
          value: "dotnet-demo-app"
      initContainers:
      - name: newrelic-dotnet-sidecar
        image: alpine:latest
        imagePullPolicy: IfNotPresent
        command: ["sh","-c","wget -qO- https://download.newrelic.com/dot_net_agent/latest_release/newrelic-netcore20-agent_$(AGENT_VERSION)_amd64.tar.gz | tar xvzf - -C /agent-dir"] 
        env:
        - name: AGENT_VERSION
          value: "8.39.0.0"
        volumeMounts:
        - name: agentdir
          mountPath: "/agent-dir"
      volumes:
      - name: agentdir
        emptyDir: {}
